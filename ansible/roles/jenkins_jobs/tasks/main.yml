
# - name: Configure jenkins job.
#   jenkins_plugin:
#     name: "{{ item.name | default(item) }}"
#     config: "{{ lookup('template', 'templates/multibranch.xml.j2') }}"
#     # version: "{{ item.version | default(omit) }}"
#     # jenkins_home: "{{ jenkins_home }}"
#     user: "{{ jenkins_admin_username }}"
#     password: "{{ jenkins_admin_password }}"
#     # state: "{{ 'present' if item.version is defined else jenkins_plugins_state }}"
#     # timeout: "{{ jenkins_plugin_timeout }}"
#     # updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
#     # updates_url: "{{ jenkins_updates_url }}"
#     url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
#     # with_dependencies: "{{ jenkins_plugins_install_dependencies }}"
#   with_items: "{{ jenkins_jobs }}"
#   when: jenkins_admin_password | default(false)
#   # notify: restart jenkins
#   tags: ['skip_ansible_lint']
#   # register: plugin_result
#   # until: plugin_result is success
#   retries: 3
#   delay: 2

- name: establish credentials
  jenkins_script:
    script: "{{ lookup('file', 'templates/add-secret.groovy') }}"
    args:
      secret_name: "git_key"
      description: "git clone key"
      username: "git"
      password: null
      private_key: "{{ private_key }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
  # with_items: "{{ entrada_cicd_credentials }}"

- name: Add Jenkins folder
  jenkins_script:
    script: "{{ lookup('file', 'templates/add-folder.groovy') }}"
    args:
      folderName: "builds"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"


- name: Add deployment pipeline
  jenkins_script:
    script: "{{ lookup('file', 'templates/add-multibranch-pipeline-job.groovy') }}"
    args:
      folderName: "builds"
      jobName: "{{ item.name }}"
      jobScript: jenkins/example-deploy.groovy
      gitRepo: "{{ item.git_repo }}"
      gitRepoName: example
      credentialsId: "git_key"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
  with_items: "{{ jenkins_jobs }}"
  # loop_control:
  #   loop_var: job
  #   label: "{{ job.key }}"